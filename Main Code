                    ## this is a currency converter using tkinter! ##

from tkinter import *
from tkinter import ttk
from tkinter import messagebox

root = Tk()
root.title("Currency conversion")
root.iconbitmap(r"C:\Users\TLMU03\Downloads\pic.ico")
root.geometry("500x500")

# create tabs
my_notebook = ttk.Notebook(root)
my_notebook.pack(pady=5)

# create the two frames
currency_frame = Frame(my_notebook, width=4800, height=480)
conversion_frame = Frame(my_notebook, width=480, height=480)

currency_frame.pack(fill="both", expand=1)
conversion_frame.pack(fill="both", expand=1)

# add the tabs
my_notebook.add(currency_frame, text="Currencies")
my_notebook.add(conversion_frame, text="Convert")

# disable second tab
my_notebook.tab(1, state="disabled")

#################
# CURRENCY CODE #
#################


def lock():
    if not home_entry.get() or not conversion_entry.get() or not rate_entry.get():
        messagebox.showwarning("WARNING!", "you did not fill out all the fields")
    else:
        # disable entry boxes
        home_entry.config(state="disabled")
        conversion_entry.config(state="disabled")
        rate_entry.config(state="disabled")
        # enable tab
        my_notebook.tab(1, state="normal")
        # change tab field
        amount_label.config(text=f"Amount of {home_entry.get()} to convert to {conversion_entry.get()}")
        converted_label.config(text=f"Equals this many {conversion_entry.get()}")
        convert_button.config(text=f"Convert from {home_entry.get()}")


def unlock():
    # enable entry boxes
    home_entry.config(state="normal")
    conversion_entry.config(state="normal")
    rate_entry.config(state="normal")
    # disable tab
    my_notebook.tab(1, state="disabled")


home = LabelFrame(currency_frame, text="Your Home Currency")
home.pack(pady=20)

# home currency enter box
home_entry = Entry(home, font=("HELVETICA", 24))
home_entry.pack(pady=10, padx=10)

# conversion currency frame
conversion = LabelFrame(currency_frame, text="Conversion Currency")
conversion.pack(pady=20)

# convert to label
conversion_label = Label(conversion, text="Currency to convert to...")
conversion_label.pack(pady=10)

# convert to entry
conversion_entry = Entry(conversion, font=("HELVETICA", 24))
conversion_entry.pack(pady=10, padx=10)

# rate label
rate_label = Label(conversion, text="Current conversion rate...")
rate_label.pack(pady=10)

# rate to entry
rate_entry = Entry(conversion, font=("HELVETICA", 24))
rate_entry.pack(pady=10, padx=10)

# button frame
button_frame = Frame(currency_frame)
button_frame.pack(pady=20)

# create buttons
lock_button = Button(button_frame, text="Lock", command=lock)
lock_button.grid(row=0, column=0, padx=10)

unlock_button = Button(button_frame, text="Unlock", command=unlock)
unlock_button.grid(row=0, column=1, padx=10)

#################
# CURRENCY CODE #
#################


def convert():
    # Clear converted entry
    converted_entry.delete(0, END)

    # convert
    conversion = float(rate_entry.get()) * float(amount_entry.get())
    # convert to two decimal places
    conversion = round(conversion, 2)
    # update entry box
    converted_entry.insert(0, conversion)


def clear():
    amount_entry.delete(0, END)
    converted_entry.delete(0, END)


amount_label = LabelFrame(conversion_frame, text="Amount to convert")
amount_label.pack(pady=20)

# entry box for amount
amount_entry = Entry(amount_label, font=("HELVETICA", 24))
amount_entry.pack(pady=10, padx=10)

# convert button
convert_button = Button(amount_label, text="Convert", command=convert)
convert_button.pack(pady=20)

# Equals Frame
converted_label = LabelFrame(conversion_frame, text="Converted currency")
converted_label.pack(pady=20)

# converted entry
converted_entry = Entry(converted_label, font=("HELVETICA", 24), bd=0, bg="systembuttonface")
converted_entry.pack(pady=10, padx=10)

# clear button
clear_button = Button(conversion_frame, text="Clear", command=clear)
clear_button.pack(pady=20)

# Fake label for spacing
spacer = Label(conversion_frame, text="", width=68)
spacer.pack()

root.mainloop()
